{
    "scripts": {
        "build": "webpack --mode production",
        "dev": "webpack --mode development",
        "watch": "webpack --watch --mode development",
        "test:create-link-page": "node scripts/generate-test-docs.js",
        "test:firefox": "npm run test:create-link-page && node scripts/run-browser-test.js firefox",
        "test:chrome": "npm run test:create-link-page && node scripts/run-browser-test.js chrome",
        "package": "web-ext build --source-dir ./dist/ --artifacts-dir ./ --overwrite-dest",
        "package:src": "powershell \"$version = (Get-Content manifest.json | ConvertFrom-Json).version; $zipName = 'github_social_icons-src-' + $version + '.zip'; if (Test-Path $zipName) { Remove-Item $zipName }; $entries = @('docs/', 'icons/', 'src/', 'test/', 'manifest.json', 'package.json', 'package-lock.json', 'README.md', 'tsconfig.json', 'webpack.config.js'); Add-Type -AssemblyName System.IO.Compression.FileSystem; $zip = [System.IO.Compression.ZipFile]::Open($zipName, 'Create'); foreach ($entry in $entries) { if ($entry.EndsWith('/')) { Get-ChildItem $entry.TrimEnd('/') -Recurse -File | ForEach-Object { $relativePath = ($_.FullName -replace [regex]::Escape($PWD.Path + '\\'), '') -replace '\\\\', '/'; [System.IO.Compression.ZipFileExtensions]::CreateEntryFromFile($zip, $_.FullName, $relativePath, 'Optimal') } } else { [System.IO.Compression.ZipFileExtensions]::CreateEntryFromFile($zip, $entry, $entry, 'Optimal') } }; $zip.Dispose()\""
    },
    "devDependencies": {
        "@types/chrome": "^0.0.313",
        "copy-webpack-plugin": "^13.0.0",
        "markdown-it": "^14.0.0",
        "ts-loader": "^9.5.1",
        "typescript": "^5.5.2",
        "webpack": "^5.92.1",
        "webpack-cli": "^5.1.4"
    }
}
